version: "3.9"

services:
  db:
    image: mysql:8.0
    restart: unless-stopped
    container_name: ${PROJECT_NAME}-mysql
    env_file: .env
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${WORDPRESS_DB_NAME}
      MYSQL_USER: ${WORDPRESS_DB_USER}
      MYSQL_PASSWORD: ${WORDPRESS_DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - toolkit

  wordpress:
    build:
      context: ./srcs/wordpress
      dockerfile: Dockerfile
    ports:
      - "80:8000"
    restart: unless-stopped
    env_file: .env
    container_name: ${PROJECT_NAME}-wordpress
    extra_hosts:
      - "${DOMAIN}:127.0.0.1"
      - "www.${DOMAIN}:127.0.0.1"
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
    volumes:
      - wordpress_data:/var/www/html
      - ./srcs/wordpress/updraft:/var/www/html/wp-content/updraft
      - ./srcs/nodejs/themes/toolkit/:/var/www/html/wp-content/themes/toolkit
    depends_on:
      - nodejs
    networks:
      - toolkit

  nodejs:
    build:
      context: ./srcs/nodejs
      dockerfile: Dockerfile
      args:
        NODE_VERSION: ${NODE_VERSION}
        APP_NAME: ${APP_NAME}
    env_file: .env
    container_name: ${PROJECT_NAME}-nodejs
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./srcs/nodejs/themes/toolkit/:/app
      - exclude_node:/app/node_modules
    ports:
      - "3000:3000"
      - "5173:5173"
    networks:
      - toolkit

  adminer:
    image: adminer
    restart: unless-stopped
    container_name: ${PROJECT_NAME}-adminer
    ports:
      - "8080:8080"
    networks:
      - toolkit
    depends_on:
      - db

volumes:
  db_data:
  wordpress_data:
  wordpress_theme:
  exclude_node:

networks:
  toolkit:
